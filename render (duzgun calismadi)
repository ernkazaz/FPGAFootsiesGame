from PIL import Image
import os

def rgb_to_rrrgggbb(r, g, b):
    r3 = r >> 5  # Top 3 bits of red
    g3 = g >> 5  # Top 3 bits of green
    b2 = b >> 6  # Top 2 bits of blue
    return (r3 << 5) | (g3 << 2) | b2

def convert_image_to_verilog(image_path, sprite_width=32, sprite_height=32):
    img = Image.open(image_path).convert("RGB")
    img = img.resize((sprite_width, sprite_height), Image.NEAREST)

    lines = []
    addr = 0
    for y in range(sprite_height):
        for x in range(sprite_width):
            r, g, b = img.getpixel((x, y))
            color_val = rgb_to_rrrgggbb(r, g, b)
            line = f"        8'd{addr}: pixel_data = 8'b{color_val:08b};"
            lines.append(line)
            addr += 1

    with open("sprite_rom.v", "w") as f:
        f.write("module sprite_rom (\n")
        f.write("    input wire [7:0] row_col_addr,\n")
        f.write("    output reg [7:0] pixel_data\n);\n\n")
        f.write("always @(*) begin\n")
        f.write("    case (row_col_addr)\n")
        f.writelines(line + "\n" for line in lines)
        f.write("        default: pixel_data = 8'b11111111;\n")
        f.write("    endcase\nend\nendmodule\n")

    print("Verilog sprite_rom.v file generated successfully.")

convert_image_to_verilog("...") # path 

print("Generated:", os.path.abspath("sprite_rom.v")) # printf path
