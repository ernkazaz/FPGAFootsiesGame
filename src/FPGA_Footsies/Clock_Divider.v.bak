module Clock_Divider #(parameter division=2, parameter W=32)(
	input clk_in,
	input reset,
	input stop,
	input button,
	output reg clk_out
);

wire [W-1:0] counter;
reg [1:0] control;

Counter #(W) count_inst(
	.clk(clk_in),
	.control(control),
	.counter(counter)
);



always@(posedge clk_in) begin
	if (reset) begin
		control <= 2'b00;
		clk_out <= 0;
	end else begin
		control <= 2'b01;
		if (counter == (division/2 - 1)) begin
			clk_out <= ~clk_out;
			control <= 2'b00;
		end
	end
end


endmodule